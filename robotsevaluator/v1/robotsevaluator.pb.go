// Code generated by protoc-gen-go. DO NOT EDIT.
// source: robotsevaluator/v1/robotsevaluator.proto

package robotsevaluator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/nlnwa/veidemann-api-go/config/v1"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsAllowedRequest struct {
	JobExecutionId       string           `protobuf:"bytes,1,opt,name=job_execution_id,json=jobExecutionId,proto3" json:"job_execution_id,omitempty"`
	ExecutionId          string           `protobuf:"bytes,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Uri                  string           `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	UserAgent            string           `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Politeness           *v1.ConfigObject `protobuf:"bytes,5,opt,name=politeness,proto3" json:"politeness,omitempty"`
	CollectionRef        *v1.ConfigRef    `protobuf:"bytes,6,opt,name=collection_ref,json=collectionRef,proto3" json:"collection_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IsAllowedRequest) Reset()         { *m = IsAllowedRequest{} }
func (m *IsAllowedRequest) String() string { return proto.CompactTextString(m) }
func (*IsAllowedRequest) ProtoMessage()    {}
func (*IsAllowedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d84e919afcf1da00, []int{0}
}

func (m *IsAllowedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsAllowedRequest.Unmarshal(m, b)
}
func (m *IsAllowedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsAllowedRequest.Marshal(b, m, deterministic)
}
func (m *IsAllowedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsAllowedRequest.Merge(m, src)
}
func (m *IsAllowedRequest) XXX_Size() int {
	return xxx_messageInfo_IsAllowedRequest.Size(m)
}
func (m *IsAllowedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsAllowedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsAllowedRequest proto.InternalMessageInfo

func (m *IsAllowedRequest) GetJobExecutionId() string {
	if m != nil {
		return m.JobExecutionId
	}
	return ""
}

func (m *IsAllowedRequest) GetExecutionId() string {
	if m != nil {
		return m.ExecutionId
	}
	return ""
}

func (m *IsAllowedRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *IsAllowedRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *IsAllowedRequest) GetPoliteness() *v1.ConfigObject {
	if m != nil {
		return m.Politeness
	}
	return nil
}

func (m *IsAllowedRequest) GetCollectionRef() *v1.ConfigRef {
	if m != nil {
		return m.CollectionRef
	}
	return nil
}

type IsAllowedReply struct {
	IsAllowed            bool     `protobuf:"varint,1,opt,name=is_allowed,json=isAllowed,proto3" json:"is_allowed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsAllowedReply) Reset()         { *m = IsAllowedReply{} }
func (m *IsAllowedReply) String() string { return proto.CompactTextString(m) }
func (*IsAllowedReply) ProtoMessage()    {}
func (*IsAllowedReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d84e919afcf1da00, []int{1}
}

func (m *IsAllowedReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsAllowedReply.Unmarshal(m, b)
}
func (m *IsAllowedReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsAllowedReply.Marshal(b, m, deterministic)
}
func (m *IsAllowedReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsAllowedReply.Merge(m, src)
}
func (m *IsAllowedReply) XXX_Size() int {
	return xxx_messageInfo_IsAllowedReply.Size(m)
}
func (m *IsAllowedReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IsAllowedReply.DiscardUnknown(m)
}

var xxx_messageInfo_IsAllowedReply proto.InternalMessageInfo

func (m *IsAllowedReply) GetIsAllowed() bool {
	if m != nil {
		return m.IsAllowed
	}
	return false
}

func init() {
	proto.RegisterType((*IsAllowedRequest)(nil), "veidemann.api.robotsevaluator.v1.IsAllowedRequest")
	proto.RegisterType((*IsAllowedReply)(nil), "veidemann.api.robotsevaluator.v1.IsAllowedReply")
}

func init() {
	proto.RegisterFile("robotsevaluator/v1/robotsevaluator.proto", fileDescriptor_d84e919afcf1da00)
}

var fileDescriptor_d84e919afcf1da00 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x25, 0xbb, 0xb0, 0xa2, 0x5e, 0x28, 0x95, 0x0f, 0x28, 0xac, 0x84, 0x54, 0x22, 0x21, 0x45,
	0x48, 0xeb, 0xd0, 0x72, 0xe4, 0xb4, 0x0b, 0x3d, 0xf4, 0x04, 0x32, 0x37, 0x2e, 0x91, 0xe3, 0x4c,
	0x82, 0x2b, 0xd7, 0x13, 0x6c, 0x27, 0xa5, 0x3f, 0xc0, 0x89, 0xaf, 0xe0, 0x4b, 0x51, 0x5c, 0x95,
	0xb6, 0xe1, 0x50, 0x71, 0x1b, 0xbd, 0x79, 0xef, 0x69, 0x66, 0xde, 0x90, 0xd4, 0x62, 0x81, 0xde,
	0x41, 0x27, 0x74, 0x2b, 0x3c, 0xda, 0xac, 0x9b, 0x65, 0x03, 0x88, 0x35, 0x16, 0x3d, 0xd2, 0x69,
	0x07, 0xaa, 0x84, 0xb5, 0x30, 0x86, 0x89, 0x46, 0xb1, 0x21, 0xa9, 0x9b, 0xdd, 0xbc, 0x90, 0x68,
	0x2a, 0x55, 0x07, 0x0b, 0x70, 0xd8, 0x5a, 0x09, 0x6e, 0x27, 0x4e, 0x7e, 0x5f, 0x90, 0xc9, 0xd2,
	0xdd, 0x69, 0x8d, 0x1b, 0x28, 0x39, 0x7c, 0x6f, 0xc1, 0x79, 0x9a, 0x92, 0xc9, 0x0a, 0x8b, 0x1c,
	0x7e, 0x80, 0x6c, 0xbd, 0x42, 0x93, 0xab, 0x32, 0x8e, 0xa6, 0x51, 0x3a, 0xe2, 0xe3, 0x15, 0x16,
	0x8b, 0x3d, 0xbc, 0x2c, 0xe9, 0x2b, 0xf2, 0xe4, 0x84, 0x75, 0x11, 0x58, 0xd7, 0x70, 0x44, 0x99,
	0x90, 0xcb, 0xd6, 0xaa, 0xf8, 0x32, 0x74, 0xfa, 0x92, 0xbe, 0x24, 0xa4, 0x75, 0x60, 0x73, 0x51,
	0x83, 0xf1, 0xf1, 0xc3, 0xd0, 0x18, 0xf5, 0xc8, 0x5d, 0x0f, 0xd0, 0x05, 0x21, 0x0d, 0x6a, 0xe5,
	0xc1, 0x80, 0x73, 0xf1, 0xa3, 0x69, 0x94, 0x5e, 0xcf, 0x5f, 0xb3, 0xd3, 0x25, 0x77, 0x0b, 0xb1,
	0x6e, 0xc6, 0x3e, 0x84, 0xea, 0x53, 0xb1, 0x02, 0xe9, 0xf9, 0x91, 0x90, 0x2e, 0xc9, 0x58, 0xa2,
	0xd6, 0x20, 0xc3, 0x6c, 0x16, 0xaa, 0xf8, 0x2a, 0x58, 0x25, 0x67, 0xac, 0x38, 0x54, 0xfc, 0xe9,
	0x41, 0xc9, 0xa1, 0x4a, 0x32, 0x32, 0x3e, 0xba, 0x51, 0xa3, 0xb7, 0xfd, 0x0a, 0xca, 0xe5, 0x62,
	0x07, 0x85, 0xdb, 0x3c, 0xe6, 0x23, 0xb5, 0xe7, 0xcc, 0x7f, 0x46, 0xe4, 0x19, 0x0f, 0x39, 0x2c,
	0xf6, 0x39, 0x50, 0x47, 0x0e, 0x04, 0x3a, 0x67, 0xe7, 0x42, 0x63, 0xc3, 0x54, 0x6e, 0xde, 0xfe,
	0x97, 0xa6, 0xd1, 0xdb, 0xe4, 0xc1, 0xfd, 0xaf, 0x88, 0xbc, 0x31, 0xc8, 0x4c, 0xc1, 0x8c, 0x11,
	0x67, 0xf5, 0xf7, 0xcf, 0x07, 0x43, 0x7f, 0x01, 0xdb, 0x29, 0x09, 0x9f, 0xa3, 0xaf, 0x1f, 0x6b,
	0xe5, 0xbf, 0xb5, 0x05, 0x93, 0xb8, 0xce, 0x8c, 0x36, 0x1b, 0x91, 0xfd, 0x35, 0xbb, 0x15, 0x8d,
	0xba, 0xad, 0x31, 0xfb, 0xf7, 0x61, 0xdf, 0x0f, 0xa0, 0xe2, 0x2a, 0x3c, 0xdd, 0xbb, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x76, 0x53, 0xd7, 0xc6, 0xdd, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RobotsEvaluatorClient is the client API for RobotsEvaluator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RobotsEvaluatorClient interface {
	IsAllowed(ctx context.Context, in *IsAllowedRequest, opts ...grpc.CallOption) (*IsAllowedReply, error)
}

type robotsEvaluatorClient struct {
	cc *grpc.ClientConn
}

func NewRobotsEvaluatorClient(cc *grpc.ClientConn) RobotsEvaluatorClient {
	return &robotsEvaluatorClient{cc}
}

func (c *robotsEvaluatorClient) IsAllowed(ctx context.Context, in *IsAllowedRequest, opts ...grpc.CallOption) (*IsAllowedReply, error) {
	out := new(IsAllowedReply)
	err := c.cc.Invoke(ctx, "/veidemann.api.robotsevaluator.v1.RobotsEvaluator/isAllowed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RobotsEvaluatorServer is the server API for RobotsEvaluator service.
type RobotsEvaluatorServer interface {
	IsAllowed(context.Context, *IsAllowedRequest) (*IsAllowedReply, error)
}

func RegisterRobotsEvaluatorServer(s *grpc.Server, srv RobotsEvaluatorServer) {
	s.RegisterService(&_RobotsEvaluator_serviceDesc, srv)
}

func _RobotsEvaluator_IsAllowed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsAllowedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RobotsEvaluatorServer).IsAllowed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veidemann.api.robotsevaluator.v1.RobotsEvaluator/IsAllowed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RobotsEvaluatorServer).IsAllowed(ctx, req.(*IsAllowedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RobotsEvaluator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "veidemann.api.robotsevaluator.v1.RobotsEvaluator",
	HandlerType: (*RobotsEvaluatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "isAllowed",
			Handler:    _RobotsEvaluator_IsAllowed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "robotsevaluator/v1/robotsevaluator.proto",
}
