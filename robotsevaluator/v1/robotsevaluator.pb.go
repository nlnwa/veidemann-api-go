// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1
// 	protoc        v3.11.4
// source: robotsevaluator/v1/robotsevaluator.proto

package robotsevaluator

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/nlnwa/veidemann-api-go/config/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type IsAllowedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobExecutionId string           `protobuf:"bytes,1,opt,name=job_execution_id,json=jobExecutionId,proto3" json:"job_execution_id,omitempty"`
	ExecutionId    string           `protobuf:"bytes,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Uri            string           `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	UserAgent      string           `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Politeness     *v1.ConfigObject `protobuf:"bytes,5,opt,name=politeness,proto3" json:"politeness,omitempty"`
	CollectionRef  *v1.ConfigRef    `protobuf:"bytes,6,opt,name=collection_ref,json=collectionRef,proto3" json:"collection_ref,omitempty"`
}

func (x *IsAllowedRequest) Reset() {
	*x = IsAllowedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robotsevaluator_v1_robotsevaluator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAllowedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAllowedRequest) ProtoMessage() {}

func (x *IsAllowedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_robotsevaluator_v1_robotsevaluator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAllowedRequest.ProtoReflect.Descriptor instead.
func (*IsAllowedRequest) Descriptor() ([]byte, []int) {
	return file_robotsevaluator_v1_robotsevaluator_proto_rawDescGZIP(), []int{0}
}

func (x *IsAllowedRequest) GetJobExecutionId() string {
	if x != nil {
		return x.JobExecutionId
	}
	return ""
}

func (x *IsAllowedRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *IsAllowedRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *IsAllowedRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *IsAllowedRequest) GetPoliteness() *v1.ConfigObject {
	if x != nil {
		return x.Politeness
	}
	return nil
}

func (x *IsAllowedRequest) GetCollectionRef() *v1.ConfigRef {
	if x != nil {
		return x.CollectionRef
	}
	return nil
}

type IsAllowedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAllowed   bool                         `protobuf:"varint,1,opt,name=is_allowed,json=isAllowed,proto3" json:"is_allowed,omitempty"`
	CrawlDelay  float32                      `protobuf:"fixed32,2,opt,name=crawl_delay,json=crawlDelay,proto3" json:"crawl_delay,omitempty"`
	CacheDelay  float32                      `protobuf:"fixed32,3,opt,name=cache_delay,json=cacheDelay,proto3" json:"cache_delay,omitempty"`
	Sitemap     []string                     `protobuf:"bytes,4,rep,name=sitemap,proto3" json:"sitemap,omitempty"`
	OtherFields []*IsAllowedReply_OtherField `protobuf:"bytes,5,rep,name=other_fields,json=otherFields,proto3" json:"other_fields,omitempty"`
}

func (x *IsAllowedReply) Reset() {
	*x = IsAllowedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robotsevaluator_v1_robotsevaluator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAllowedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAllowedReply) ProtoMessage() {}

func (x *IsAllowedReply) ProtoReflect() protoreflect.Message {
	mi := &file_robotsevaluator_v1_robotsevaluator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAllowedReply.ProtoReflect.Descriptor instead.
func (*IsAllowedReply) Descriptor() ([]byte, []int) {
	return file_robotsevaluator_v1_robotsevaluator_proto_rawDescGZIP(), []int{1}
}

func (x *IsAllowedReply) GetIsAllowed() bool {
	if x != nil {
		return x.IsAllowed
	}
	return false
}

func (x *IsAllowedReply) GetCrawlDelay() float32 {
	if x != nil {
		return x.CrawlDelay
	}
	return 0
}

func (x *IsAllowedReply) GetCacheDelay() float32 {
	if x != nil {
		return x.CacheDelay
	}
	return 0
}

func (x *IsAllowedReply) GetSitemap() []string {
	if x != nil {
		return x.Sitemap
	}
	return nil
}

func (x *IsAllowedReply) GetOtherFields() []*IsAllowedReply_OtherField {
	if x != nil {
		return x.OtherFields
	}
	return nil
}

type IsAllowedReply_OtherField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IsAllowedReply_OtherField) Reset() {
	*x = IsAllowedReply_OtherField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robotsevaluator_v1_robotsevaluator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAllowedReply_OtherField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAllowedReply_OtherField) ProtoMessage() {}

func (x *IsAllowedReply_OtherField) ProtoReflect() protoreflect.Message {
	mi := &file_robotsevaluator_v1_robotsevaluator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAllowedReply_OtherField.ProtoReflect.Descriptor instead.
func (*IsAllowedReply_OtherField) Descriptor() ([]byte, []int) {
	return file_robotsevaluator_v1_robotsevaluator_proto_rawDescGZIP(), []int{1, 0}
}

func (x *IsAllowedReply_OtherField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IsAllowedReply_OtherField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_robotsevaluator_v1_robotsevaluator_proto protoreflect.FileDescriptor

var file_robotsevaluator_v1_robotsevaluator_proto_rawDesc = []byte{
	0x0a, 0x28, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x76, 0x65, 0x69, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x02, 0x0a, 0x10, 0x49, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x6a, 0x6f, 0x62, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6a, 0x6f, 0x62, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x6f,
	0x6c, 0x69, 0x74, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x76, 0x65, 0x69, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x65, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x49, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x65, 0x69, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x52, 0x0d, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x22, 0xa3, 0x02, 0x0a,
	0x0e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x6d, 0x61, 0x70, 0x12, 0x5e, 0x0a, 0x0c, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x76, 0x65, 0x69, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0b, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x36, 0x0a, 0x0a, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x32, 0x86, 0x01, 0x0a, 0x0f, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x73, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x12, 0x32, 0x2e, 0x76, 0x65, 0x69, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x76, 0x65, 0x69, 0x64, 0x65, 0x6d,
	0x61, 0x6e, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x8c, 0x01, 0x0a, 0x2a,
	0x6e, 0x6f, 0x2e, 0x6e, 0x62, 0x2e, 0x6e, 0x6e, 0x61, 0x2e, 0x76, 0x65, 0x69, 0x64, 0x65, 0x6d,
	0x61, 0x6e, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x16, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x73, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6e, 0x6c, 0x6e, 0x77, 0x61, 0x2f, 0x76, 0x65, 0x69, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x6e,
	0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x73, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_robotsevaluator_v1_robotsevaluator_proto_rawDescOnce sync.Once
	file_robotsevaluator_v1_robotsevaluator_proto_rawDescData = file_robotsevaluator_v1_robotsevaluator_proto_rawDesc
)

func file_robotsevaluator_v1_robotsevaluator_proto_rawDescGZIP() []byte {
	file_robotsevaluator_v1_robotsevaluator_proto_rawDescOnce.Do(func() {
		file_robotsevaluator_v1_robotsevaluator_proto_rawDescData = protoimpl.X.CompressGZIP(file_robotsevaluator_v1_robotsevaluator_proto_rawDescData)
	})
	return file_robotsevaluator_v1_robotsevaluator_proto_rawDescData
}

var file_robotsevaluator_v1_robotsevaluator_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_robotsevaluator_v1_robotsevaluator_proto_goTypes = []interface{}{
	(*IsAllowedRequest)(nil),          // 0: veidemann.api.robotsevaluator.v1.IsAllowedRequest
	(*IsAllowedReply)(nil),            // 1: veidemann.api.robotsevaluator.v1.IsAllowedReply
	(*IsAllowedReply_OtherField)(nil), // 2: veidemann.api.robotsevaluator.v1.IsAllowedReply.OtherField
	(*v1.ConfigObject)(nil),           // 3: veidemann.api.config.v1.ConfigObject
	(*v1.ConfigRef)(nil),              // 4: veidemann.api.config.v1.ConfigRef
}
var file_robotsevaluator_v1_robotsevaluator_proto_depIdxs = []int32{
	3, // 0: veidemann.api.robotsevaluator.v1.IsAllowedRequest.politeness:type_name -> veidemann.api.config.v1.ConfigObject
	4, // 1: veidemann.api.robotsevaluator.v1.IsAllowedRequest.collection_ref:type_name -> veidemann.api.config.v1.ConfigRef
	2, // 2: veidemann.api.robotsevaluator.v1.IsAllowedReply.other_fields:type_name -> veidemann.api.robotsevaluator.v1.IsAllowedReply.OtherField
	0, // 3: veidemann.api.robotsevaluator.v1.RobotsEvaluator.isAllowed:input_type -> veidemann.api.robotsevaluator.v1.IsAllowedRequest
	1, // 4: veidemann.api.robotsevaluator.v1.RobotsEvaluator.isAllowed:output_type -> veidemann.api.robotsevaluator.v1.IsAllowedReply
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_robotsevaluator_v1_robotsevaluator_proto_init() }
func file_robotsevaluator_v1_robotsevaluator_proto_init() {
	if File_robotsevaluator_v1_robotsevaluator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_robotsevaluator_v1_robotsevaluator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAllowedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robotsevaluator_v1_robotsevaluator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAllowedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robotsevaluator_v1_robotsevaluator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAllowedReply_OtherField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_robotsevaluator_v1_robotsevaluator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_robotsevaluator_v1_robotsevaluator_proto_goTypes,
		DependencyIndexes: file_robotsevaluator_v1_robotsevaluator_proto_depIdxs,
		MessageInfos:      file_robotsevaluator_v1_robotsevaluator_proto_msgTypes,
	}.Build()
	File_robotsevaluator_v1_robotsevaluator_proto = out.File
	file_robotsevaluator_v1_robotsevaluator_proto_rawDesc = nil
	file_robotsevaluator_v1_robotsevaluator_proto_goTypes = nil
	file_robotsevaluator_v1_robotsevaluator_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RobotsEvaluatorClient is the client API for RobotsEvaluator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RobotsEvaluatorClient interface {
	IsAllowed(ctx context.Context, in *IsAllowedRequest, opts ...grpc.CallOption) (*IsAllowedReply, error)
}

type robotsEvaluatorClient struct {
	cc grpc.ClientConnInterface
}

func NewRobotsEvaluatorClient(cc grpc.ClientConnInterface) RobotsEvaluatorClient {
	return &robotsEvaluatorClient{cc}
}

func (c *robotsEvaluatorClient) IsAllowed(ctx context.Context, in *IsAllowedRequest, opts ...grpc.CallOption) (*IsAllowedReply, error) {
	out := new(IsAllowedReply)
	err := c.cc.Invoke(ctx, "/veidemann.api.robotsevaluator.v1.RobotsEvaluator/isAllowed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RobotsEvaluatorServer is the server API for RobotsEvaluator service.
type RobotsEvaluatorServer interface {
	IsAllowed(context.Context, *IsAllowedRequest) (*IsAllowedReply, error)
}

// UnimplementedRobotsEvaluatorServer can be embedded to have forward compatible implementations.
type UnimplementedRobotsEvaluatorServer struct {
}

func (*UnimplementedRobotsEvaluatorServer) IsAllowed(context.Context, *IsAllowedRequest) (*IsAllowedReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsAllowed not implemented")
}

func RegisterRobotsEvaluatorServer(s *grpc.Server, srv RobotsEvaluatorServer) {
	s.RegisterService(&_RobotsEvaluator_serviceDesc, srv)
}

func _RobotsEvaluator_IsAllowed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsAllowedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RobotsEvaluatorServer).IsAllowed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veidemann.api.robotsevaluator.v1.RobotsEvaluator/IsAllowed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RobotsEvaluatorServer).IsAllowed(ctx, req.(*IsAllowedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RobotsEvaluator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "veidemann.api.robotsevaluator.v1.RobotsEvaluator",
	HandlerType: (*RobotsEvaluatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "isAllowed",
			Handler:    _RobotsEvaluator_IsAllowed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "robotsevaluator/v1/robotsevaluator.proto",
}
