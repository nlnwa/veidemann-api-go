// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config/v1/resources.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Kind int32

const (
	Kind_undefined            Kind = 0
	Kind_crawlEntity          Kind = 5
	Kind_seed                 Kind = 6
	Kind_crawlJob             Kind = 7
	Kind_crawlConfig          Kind = 8
	Kind_crawlScheduleConfig  Kind = 9
	Kind_browserConfig        Kind = 10
	Kind_politenessConfig     Kind = 11
	Kind_browserScript        Kind = 12
	Kind_crawlHostGroupConfig Kind = 13
	Kind_roleMapping          Kind = 14
	Kind_collection           Kind = 15
)

var Kind_name = map[int32]string{
	0:  "undefined",
	5:  "crawlEntity",
	6:  "seed",
	7:  "crawlJob",
	8:  "crawlConfig",
	9:  "crawlScheduleConfig",
	10: "browserConfig",
	11: "politenessConfig",
	12: "browserScript",
	13: "crawlHostGroupConfig",
	14: "roleMapping",
	15: "collection",
}

var Kind_value = map[string]int32{
	"undefined":            0,
	"crawlEntity":          5,
	"seed":                 6,
	"crawlJob":             7,
	"crawlConfig":          8,
	"crawlScheduleConfig":  9,
	"browserConfig":        10,
	"politenessConfig":     11,
	"browserScript":        12,
	"crawlHostGroupConfig": 13,
	"roleMapping":          14,
	"collection":           15,
}

func (x Kind) String() string {
	return proto.EnumName(Kind_name, int32(x))
}

func (Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{0}
}

type Role int32

const (
	// Any authenticated user
	Role_ANY_USER Role = 0
	// Any user including unauthenticated users
	Role_ANY Role = 1
	// Administrator
	Role_ADMIN Role = 2
	// Curator
	Role_CURATOR Role = 3
	// A user with permission to read internal data
	Role_READONLY Role = 4
)

var Role_name = map[int32]string{
	0: "ANY_USER",
	1: "ANY",
	2: "ADMIN",
	3: "CURATOR",
	4: "READONLY",
}

var Role_value = map[string]int32{
	"ANY_USER": 0,
	"ANY":      1,
	"ADMIN":    2,
	"CURATOR":  3,
	"READONLY": 4,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{1}
}

type PolitenessConfig_RobotsPolicy int32

const (
	PolitenessConfig_OBEY_ROBOTS   PolitenessConfig_RobotsPolicy = 0
	PolitenessConfig_IGNORE_ROBOTS PolitenessConfig_RobotsPolicy = 1
	PolitenessConfig_CUSTOM_ROBOTS PolitenessConfig_RobotsPolicy = 2
)

var PolitenessConfig_RobotsPolicy_name = map[int32]string{
	0: "OBEY_ROBOTS",
	1: "IGNORE_ROBOTS",
	2: "CUSTOM_ROBOTS",
}

var PolitenessConfig_RobotsPolicy_value = map[string]int32{
	"OBEY_ROBOTS":   0,
	"IGNORE_ROBOTS": 1,
	"CUSTOM_ROBOTS": 2,
}

func (x PolitenessConfig_RobotsPolicy) String() string {
	return proto.EnumName(PolitenessConfig_RobotsPolicy_name, int32(x))
}

func (PolitenessConfig_RobotsPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{12, 0}
}

type Collection_RotationPolicy int32

const (
	Collection_NONE    Collection_RotationPolicy = 0
	Collection_HOURLY  Collection_RotationPolicy = 1
	Collection_DAILY   Collection_RotationPolicy = 2
	Collection_MONTHLY Collection_RotationPolicy = 3
	Collection_YEARLY  Collection_RotationPolicy = 4
)

var Collection_RotationPolicy_name = map[int32]string{
	0: "NONE",
	1: "HOURLY",
	2: "DAILY",
	3: "MONTHLY",
	4: "YEARLY",
}

var Collection_RotationPolicy_value = map[string]int32{
	"NONE":    0,
	"HOURLY":  1,
	"DAILY":   2,
	"MONTHLY": 3,
	"YEARLY":  4,
}

func (x Collection_RotationPolicy) String() string {
	return proto.EnumName(Collection_RotationPolicy_name, int32(x))
}

func (Collection_RotationPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{17, 0}
}

type Collection_SubCollectionType int32

const (
	Collection_UNDEFINED  Collection_SubCollectionType = 0
	Collection_SCREENSHOT Collection_SubCollectionType = 1
	Collection_DNS        Collection_SubCollectionType = 2
)

var Collection_SubCollectionType_name = map[int32]string{
	0: "UNDEFINED",
	1: "SCREENSHOT",
	2: "DNS",
}

var Collection_SubCollectionType_value = map[string]int32{
	"UNDEFINED":  0,
	"SCREENSHOT": 1,
	"DNS":        2,
}

func (x Collection_SubCollectionType) String() string {
	return proto.EnumName(Collection_SubCollectionType_name, int32(x))
}

func (Collection_SubCollectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{17, 1}
}

type ConfigObject struct {
	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ApiVersion string `protobuf:"bytes,2,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       Kind   `protobuf:"varint,3,opt,name=kind,proto3,enum=veidemann.api.config.v1.Kind" json:"kind,omitempty"`
	Meta       *Meta  `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	// Types that are valid to be assigned to Spec:
	//	*ConfigObject_CrawlEntity
	//	*ConfigObject_Seed
	//	*ConfigObject_CrawlJob
	//	*ConfigObject_CrawlConfig
	//	*ConfigObject_CrawlScheduleConfig
	//	*ConfigObject_BrowserConfig
	//	*ConfigObject_PolitenessConfig
	//	*ConfigObject_BrowserScript
	//	*ConfigObject_CrawlHostGroupConfig
	//	*ConfigObject_RoleMapping
	//	*ConfigObject_Collection
	Spec                 isConfigObject_Spec `protobuf_oneof:"spec"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ConfigObject) Reset()         { *m = ConfigObject{} }
func (m *ConfigObject) String() string { return proto.CompactTextString(m) }
func (*ConfigObject) ProtoMessage()    {}
func (*ConfigObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{0}
}

func (m *ConfigObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigObject.Unmarshal(m, b)
}
func (m *ConfigObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigObject.Marshal(b, m, deterministic)
}
func (m *ConfigObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigObject.Merge(m, src)
}
func (m *ConfigObject) XXX_Size() int {
	return xxx_messageInfo_ConfigObject.Size(m)
}
func (m *ConfigObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigObject.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigObject proto.InternalMessageInfo

func (m *ConfigObject) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConfigObject) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *ConfigObject) GetKind() Kind {
	if m != nil {
		return m.Kind
	}
	return Kind_undefined
}

func (m *ConfigObject) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type isConfigObject_Spec interface {
	isConfigObject_Spec()
}

type ConfigObject_CrawlEntity struct {
	CrawlEntity *CrawlEntity `protobuf:"bytes,5,opt,name=crawl_entity,json=crawlEntity,proto3,oneof"`
}

type ConfigObject_Seed struct {
	Seed *Seed `protobuf:"bytes,6,opt,name=seed,proto3,oneof"`
}

type ConfigObject_CrawlJob struct {
	CrawlJob *CrawlJob `protobuf:"bytes,7,opt,name=crawl_job,json=crawlJob,proto3,oneof"`
}

type ConfigObject_CrawlConfig struct {
	CrawlConfig *CrawlConfig `protobuf:"bytes,8,opt,name=crawl_config,json=crawlConfig,proto3,oneof"`
}

type ConfigObject_CrawlScheduleConfig struct {
	CrawlScheduleConfig *CrawlScheduleConfig `protobuf:"bytes,9,opt,name=crawl_schedule_config,json=crawlScheduleConfig,proto3,oneof"`
}

type ConfigObject_BrowserConfig struct {
	BrowserConfig *BrowserConfig `protobuf:"bytes,10,opt,name=browser_config,json=browserConfig,proto3,oneof"`
}

type ConfigObject_PolitenessConfig struct {
	PolitenessConfig *PolitenessConfig `protobuf:"bytes,11,opt,name=politeness_config,json=politenessConfig,proto3,oneof"`
}

type ConfigObject_BrowserScript struct {
	BrowserScript *BrowserScript `protobuf:"bytes,12,opt,name=browser_script,json=browserScript,proto3,oneof"`
}

type ConfigObject_CrawlHostGroupConfig struct {
	CrawlHostGroupConfig *CrawlHostGroupConfig `protobuf:"bytes,13,opt,name=crawl_host_group_config,json=crawlHostGroupConfig,proto3,oneof"`
}

type ConfigObject_RoleMapping struct {
	RoleMapping *RoleMapping `protobuf:"bytes,14,opt,name=role_mapping,json=roleMapping,proto3,oneof"`
}

type ConfigObject_Collection struct {
	Collection *Collection `protobuf:"bytes,15,opt,name=collection,proto3,oneof"`
}

func (*ConfigObject_CrawlEntity) isConfigObject_Spec() {}

func (*ConfigObject_Seed) isConfigObject_Spec() {}

func (*ConfigObject_CrawlJob) isConfigObject_Spec() {}

func (*ConfigObject_CrawlConfig) isConfigObject_Spec() {}

func (*ConfigObject_CrawlScheduleConfig) isConfigObject_Spec() {}

func (*ConfigObject_BrowserConfig) isConfigObject_Spec() {}

func (*ConfigObject_PolitenessConfig) isConfigObject_Spec() {}

func (*ConfigObject_BrowserScript) isConfigObject_Spec() {}

func (*ConfigObject_CrawlHostGroupConfig) isConfigObject_Spec() {}

func (*ConfigObject_RoleMapping) isConfigObject_Spec() {}

func (*ConfigObject_Collection) isConfigObject_Spec() {}

func (m *ConfigObject) GetSpec() isConfigObject_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ConfigObject) GetCrawlEntity() *CrawlEntity {
	if x, ok := m.GetSpec().(*ConfigObject_CrawlEntity); ok {
		return x.CrawlEntity
	}
	return nil
}

func (m *ConfigObject) GetSeed() *Seed {
	if x, ok := m.GetSpec().(*ConfigObject_Seed); ok {
		return x.Seed
	}
	return nil
}

func (m *ConfigObject) GetCrawlJob() *CrawlJob {
	if x, ok := m.GetSpec().(*ConfigObject_CrawlJob); ok {
		return x.CrawlJob
	}
	return nil
}

func (m *ConfigObject) GetCrawlConfig() *CrawlConfig {
	if x, ok := m.GetSpec().(*ConfigObject_CrawlConfig); ok {
		return x.CrawlConfig
	}
	return nil
}

func (m *ConfigObject) GetCrawlScheduleConfig() *CrawlScheduleConfig {
	if x, ok := m.GetSpec().(*ConfigObject_CrawlScheduleConfig); ok {
		return x.CrawlScheduleConfig
	}
	return nil
}

func (m *ConfigObject) GetBrowserConfig() *BrowserConfig {
	if x, ok := m.GetSpec().(*ConfigObject_BrowserConfig); ok {
		return x.BrowserConfig
	}
	return nil
}

func (m *ConfigObject) GetPolitenessConfig() *PolitenessConfig {
	if x, ok := m.GetSpec().(*ConfigObject_PolitenessConfig); ok {
		return x.PolitenessConfig
	}
	return nil
}

func (m *ConfigObject) GetBrowserScript() *BrowserScript {
	if x, ok := m.GetSpec().(*ConfigObject_BrowserScript); ok {
		return x.BrowserScript
	}
	return nil
}

func (m *ConfigObject) GetCrawlHostGroupConfig() *CrawlHostGroupConfig {
	if x, ok := m.GetSpec().(*ConfigObject_CrawlHostGroupConfig); ok {
		return x.CrawlHostGroupConfig
	}
	return nil
}

func (m *ConfigObject) GetRoleMapping() *RoleMapping {
	if x, ok := m.GetSpec().(*ConfigObject_RoleMapping); ok {
		return x.RoleMapping
	}
	return nil
}

func (m *ConfigObject) GetCollection() *Collection {
	if x, ok := m.GetSpec().(*ConfigObject_Collection); ok {
		return x.Collection
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfigObject) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfigObject_CrawlEntity)(nil),
		(*ConfigObject_Seed)(nil),
		(*ConfigObject_CrawlJob)(nil),
		(*ConfigObject_CrawlConfig)(nil),
		(*ConfigObject_CrawlScheduleConfig)(nil),
		(*ConfigObject_BrowserConfig)(nil),
		(*ConfigObject_PolitenessConfig)(nil),
		(*ConfigObject_BrowserScript)(nil),
		(*ConfigObject_CrawlHostGroupConfig)(nil),
		(*ConfigObject_RoleMapping)(nil),
		(*ConfigObject_Collection)(nil),
	}
}

type Meta struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	CreatedBy            string               `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	LastModified         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	LastModifiedBy       string               `protobuf:"bytes,6,opt,name=last_modified_by,json=lastModifiedBy,proto3" json:"last_modified_by,omitempty"`
	Label                []*Label             `protobuf:"bytes,7,rep,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{1}
}

func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Meta) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Meta) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Meta) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Meta) GetLastModified() *timestamp.Timestamp {
	if m != nil {
		return m.LastModified
	}
	return nil
}

func (m *Meta) GetLastModifiedBy() string {
	if m != nil {
		return m.LastModifiedBy
	}
	return ""
}

func (m *Meta) GetLabel() []*Label {
	if m != nil {
		return m.Label
	}
	return nil
}

type Label struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Label) Reset()         { *m = Label{} }
func (m *Label) String() string { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()    {}
func (*Label) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{2}
}

func (m *Label) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Label.Unmarshal(m, b)
}
func (m *Label) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Label.Marshal(b, m, deterministic)
}
func (m *Label) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Label.Merge(m, src)
}
func (m *Label) XXX_Size() int {
	return xxx_messageInfo_Label.Size(m)
}
func (m *Label) XXX_DiscardUnknown() {
	xxx_messageInfo_Label.DiscardUnknown(m)
}

var xxx_messageInfo_Label proto.InternalMessageInfo

func (m *Label) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Label) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Reference to another ConfigObject
type ConfigRef struct {
	Kind                 Kind     `protobuf:"varint,1,opt,name=kind,proto3,enum=veidemann.api.config.v1.Kind" json:"kind,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigRef) Reset()         { *m = ConfigRef{} }
func (m *ConfigRef) String() string { return proto.CompactTextString(m) }
func (*ConfigRef) ProtoMessage()    {}
func (*ConfigRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{3}
}

func (m *ConfigRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRef.Unmarshal(m, b)
}
func (m *ConfigRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRef.Marshal(b, m, deterministic)
}
func (m *ConfigRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRef.Merge(m, src)
}
func (m *ConfigRef) XXX_Size() int {
	return xxx_messageInfo_ConfigRef.Size(m)
}
func (m *ConfigRef) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRef.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRef proto.InternalMessageInfo

func (m *ConfigRef) GetKind() Kind {
	if m != nil {
		return m.Kind
	}
	return Kind_undefined
}

func (m *ConfigRef) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// A crawl entity (might be an organisation with one or more seeds)
type CrawlEntity struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrawlEntity) Reset()         { *m = CrawlEntity{} }
func (m *CrawlEntity) String() string { return proto.CompactTextString(m) }
func (*CrawlEntity) ProtoMessage()    {}
func (*CrawlEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{4}
}

func (m *CrawlEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlEntity.Unmarshal(m, b)
}
func (m *CrawlEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlEntity.Marshal(b, m, deterministic)
}
func (m *CrawlEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlEntity.Merge(m, src)
}
func (m *CrawlEntity) XXX_Size() int {
	return xxx_messageInfo_CrawlEntity.Size(m)
}
func (m *CrawlEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlEntity.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlEntity proto.InternalMessageInfo

type Seed struct {
	EntityRef            *ConfigRef   `protobuf:"bytes,3,opt,name=entity_ref,json=entityRef,proto3" json:"entity_ref,omitempty"`
	Scope                *CrawlScope  `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	JobRef               []*ConfigRef `protobuf:"bytes,5,rep,name=job_ref,json=jobRef,proto3" json:"job_ref,omitempty"`
	Disabled             bool         `protobuf:"varint,18,opt,name=disabled,proto3" json:"disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Seed) Reset()         { *m = Seed{} }
func (m *Seed) String() string { return proto.CompactTextString(m) }
func (*Seed) ProtoMessage()    {}
func (*Seed) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{5}
}

func (m *Seed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Seed.Unmarshal(m, b)
}
func (m *Seed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Seed.Marshal(b, m, deterministic)
}
func (m *Seed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Seed.Merge(m, src)
}
func (m *Seed) XXX_Size() int {
	return xxx_messageInfo_Seed.Size(m)
}
func (m *Seed) XXX_DiscardUnknown() {
	xxx_messageInfo_Seed.DiscardUnknown(m)
}

var xxx_messageInfo_Seed proto.InternalMessageInfo

func (m *Seed) GetEntityRef() *ConfigRef {
	if m != nil {
		return m.EntityRef
	}
	return nil
}

func (m *Seed) GetScope() *CrawlScope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *Seed) GetJobRef() []*ConfigRef {
	if m != nil {
		return m.JobRef
	}
	return nil
}

func (m *Seed) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type CrawlJob struct {
	ScheduleRef          *ConfigRef         `protobuf:"bytes,3,opt,name=schedule_ref,json=scheduleRef,proto3" json:"schedule_ref,omitempty"`
	Limits               *CrawlLimitsConfig `protobuf:"bytes,4,opt,name=limits,proto3" json:"limits,omitempty"`
	CrawlConfigRef       *ConfigRef         `protobuf:"bytes,5,opt,name=crawl_config_ref,json=crawlConfigRef,proto3" json:"crawl_config_ref,omitempty"`
	Disabled             bool               `protobuf:"varint,18,opt,name=disabled,proto3" json:"disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CrawlJob) Reset()         { *m = CrawlJob{} }
func (m *CrawlJob) String() string { return proto.CompactTextString(m) }
func (*CrawlJob) ProtoMessage()    {}
func (*CrawlJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{6}
}

func (m *CrawlJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlJob.Unmarshal(m, b)
}
func (m *CrawlJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlJob.Marshal(b, m, deterministic)
}
func (m *CrawlJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlJob.Merge(m, src)
}
func (m *CrawlJob) XXX_Size() int {
	return xxx_messageInfo_CrawlJob.Size(m)
}
func (m *CrawlJob) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlJob.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlJob proto.InternalMessageInfo

func (m *CrawlJob) GetScheduleRef() *ConfigRef {
	if m != nil {
		return m.ScheduleRef
	}
	return nil
}

func (m *CrawlJob) GetLimits() *CrawlLimitsConfig {
	if m != nil {
		return m.Limits
	}
	return nil
}

func (m *CrawlJob) GetCrawlConfigRef() *ConfigRef {
	if m != nil {
		return m.CrawlConfigRef
	}
	return nil
}

func (m *CrawlJob) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type CrawlConfig struct {
	CollectionRef    *ConfigRef   `protobuf:"bytes,6,opt,name=collection_ref,json=collectionRef,proto3" json:"collection_ref,omitempty"`
	BrowserConfigRef *ConfigRef   `protobuf:"bytes,7,opt,name=browser_config_ref,json=browserConfigRef,proto3" json:"browser_config_ref,omitempty"`
	PolitenessRef    *ConfigRef   `protobuf:"bytes,8,opt,name=politeness_ref,json=politenessRef,proto3" json:"politeness_ref,omitempty"`
	Extra            *ExtraConfig `protobuf:"bytes,9,opt,name=extra,proto3" json:"extra,omitempty"`
	MinimumDnsTtlS   int32        `protobuf:"varint,10,opt,name=minimum_dns_ttl_s,json=minimumDnsTtlS,proto3" json:"minimum_dns_ttl_s,omitempty"`
	// The weighting between jobs when two jobs compete on fetching resources from the same hosts.
	// The job will be randomly chosen, but weighted such that if two jobs with weight 1.0 and one job with
	// weight 2.0 compete, then the two first jobs will each have 25% probability of being chosen and the the third
	// job will have 50% probability of being chosen.
	PriorityWeight       float64  `protobuf:"fixed64,11,opt,name=priority_weight,json=priorityWeight,proto3" json:"priority_weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrawlConfig) Reset()         { *m = CrawlConfig{} }
func (m *CrawlConfig) String() string { return proto.CompactTextString(m) }
func (*CrawlConfig) ProtoMessage()    {}
func (*CrawlConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{7}
}

func (m *CrawlConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlConfig.Unmarshal(m, b)
}
func (m *CrawlConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlConfig.Marshal(b, m, deterministic)
}
func (m *CrawlConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlConfig.Merge(m, src)
}
func (m *CrawlConfig) XXX_Size() int {
	return xxx_messageInfo_CrawlConfig.Size(m)
}
func (m *CrawlConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlConfig proto.InternalMessageInfo

func (m *CrawlConfig) GetCollectionRef() *ConfigRef {
	if m != nil {
		return m.CollectionRef
	}
	return nil
}

func (m *CrawlConfig) GetBrowserConfigRef() *ConfigRef {
	if m != nil {
		return m.BrowserConfigRef
	}
	return nil
}

func (m *CrawlConfig) GetPolitenessRef() *ConfigRef {
	if m != nil {
		return m.PolitenessRef
	}
	return nil
}

func (m *CrawlConfig) GetExtra() *ExtraConfig {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (m *CrawlConfig) GetMinimumDnsTtlS() int32 {
	if m != nil {
		return m.MinimumDnsTtlS
	}
	return 0
}

func (m *CrawlConfig) GetPriorityWeight() float64 {
	if m != nil {
		return m.PriorityWeight
	}
	return 0
}

type CrawlScheduleConfig struct {
	CronExpression       string               `protobuf:"bytes,3,opt,name=cron_expression,json=cronExpression,proto3" json:"cron_expression,omitempty"`
	ValidFrom            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CrawlScheduleConfig) Reset()         { *m = CrawlScheduleConfig{} }
func (m *CrawlScheduleConfig) String() string { return proto.CompactTextString(m) }
func (*CrawlScheduleConfig) ProtoMessage()    {}
func (*CrawlScheduleConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{8}
}

func (m *CrawlScheduleConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlScheduleConfig.Unmarshal(m, b)
}
func (m *CrawlScheduleConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlScheduleConfig.Marshal(b, m, deterministic)
}
func (m *CrawlScheduleConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlScheduleConfig.Merge(m, src)
}
func (m *CrawlScheduleConfig) XXX_Size() int {
	return xxx_messageInfo_CrawlScheduleConfig.Size(m)
}
func (m *CrawlScheduleConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlScheduleConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlScheduleConfig proto.InternalMessageInfo

func (m *CrawlScheduleConfig) GetCronExpression() string {
	if m != nil {
		return m.CronExpression
	}
	return ""
}

func (m *CrawlScheduleConfig) GetValidFrom() *timestamp.Timestamp {
	if m != nil {
		return m.ValidFrom
	}
	return nil
}

func (m *CrawlScheduleConfig) GetValidTo() *timestamp.Timestamp {
	if m != nil {
		return m.ValidTo
	}
	return nil
}

type CrawlScope struct {
	SurtPrefix           string   `protobuf:"bytes,1,opt,name=surt_prefix,json=surtPrefix,proto3" json:"surt_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrawlScope) Reset()         { *m = CrawlScope{} }
func (m *CrawlScope) String() string { return proto.CompactTextString(m) }
func (*CrawlScope) ProtoMessage()    {}
func (*CrawlScope) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{9}
}

func (m *CrawlScope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlScope.Unmarshal(m, b)
}
func (m *CrawlScope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlScope.Marshal(b, m, deterministic)
}
func (m *CrawlScope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlScope.Merge(m, src)
}
func (m *CrawlScope) XXX_Size() int {
	return xxx_messageInfo_CrawlScope.Size(m)
}
func (m *CrawlScope) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlScope.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlScope proto.InternalMessageInfo

func (m *CrawlScope) GetSurtPrefix() string {
	if m != nil {
		return m.SurtPrefix
	}
	return ""
}

type CrawlLimitsConfig struct {
	// How deep from a seed to crawl
	Depth int32 `protobuf:"varint,1,opt,name=depth,proto3" json:"depth,omitempty"`
	// Maximum time in seconds allowed for crawl to finish
	MaxDurationS int64 `protobuf:"varint,2,opt,name=max_duration_s,json=maxDurationS,proto3" json:"max_duration_s,omitempty"`
	// Maximum number of bytes to fetch before ending crawl
	MaxBytes             int64    `protobuf:"varint,3,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrawlLimitsConfig) Reset()         { *m = CrawlLimitsConfig{} }
func (m *CrawlLimitsConfig) String() string { return proto.CompactTextString(m) }
func (*CrawlLimitsConfig) ProtoMessage()    {}
func (*CrawlLimitsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{10}
}

func (m *CrawlLimitsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlLimitsConfig.Unmarshal(m, b)
}
func (m *CrawlLimitsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlLimitsConfig.Marshal(b, m, deterministic)
}
func (m *CrawlLimitsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlLimitsConfig.Merge(m, src)
}
func (m *CrawlLimitsConfig) XXX_Size() int {
	return xxx_messageInfo_CrawlLimitsConfig.Size(m)
}
func (m *CrawlLimitsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlLimitsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlLimitsConfig proto.InternalMessageInfo

func (m *CrawlLimitsConfig) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *CrawlLimitsConfig) GetMaxDurationS() int64 {
	if m != nil {
		return m.MaxDurationS
	}
	return 0
}

func (m *CrawlLimitsConfig) GetMaxBytes() int64 {
	if m != nil {
		return m.MaxBytes
	}
	return 0
}

type BrowserConfig struct {
	UserAgent         string `protobuf:"bytes,3,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	WindowWidth       int32  `protobuf:"varint,4,opt,name=window_width,json=windowWidth,proto3" json:"window_width,omitempty"`
	WindowHeight      int32  `protobuf:"varint,5,opt,name=window_height,json=windowHeight,proto3" json:"window_height,omitempty"`
	PageLoadTimeoutMs int64  `protobuf:"varint,6,opt,name=page_load_timeout_ms,json=pageLoadTimeoutMs,proto3" json:"page_load_timeout_ms,omitempty"`
	// Select scripts by label
	// A string representing a label query. The query matches if at least one label matches the query.
	// If there are multiple queries, then each query must match at least one label.
	// Label quries are case insensitive. The basic format is <code>key:value</code> where both key and value must match.
	// If value ends with <code>&ast;</code> then the key must match and value must match up until the <code>&ast;</code>.
	// If value is empty, all labels matching the key will match.
	// If key is empty, then the matching is done on the value for all keys.
	// If key is empty, then the <code>:</code> might be ommitted.
	// <pre>
	// Examples:
	//   "foo:bar"  - matches exactly labels with key=foo and value=bar
	//   "foo:"     - matches all labels with key=foo
	//   ":bar"     - matches all labels with value=bar
	//   "bar"      - matches all labels with value=bar
	//   "foo:ba*"  - matches labels with key=foo and value starting with ba (e.g. matches bar, but not ber)
	//   ":ba*"     - matches labels with any key and value starting with ba (e.g. matches bar, but not ber)
	//   "ba*"      - matches labels with any key and value starting with ba (e.g. matches bar, but not ber)
	//   ":"        - matches every label
	//   ""         - matches every label
	// </pre>
	ScriptSelector   []string          `protobuf:"bytes,7,rep,name=script_selector,json=scriptSelector,proto3" json:"script_selector,omitempty"`
	ScriptRef        []*ConfigRef      `protobuf:"bytes,8,rep,name=script_ref,json=scriptRef,proto3" json:"script_ref,omitempty"`
	Headers          map[string]string `protobuf:"bytes,16,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ScriptParameters map[string]string `protobuf:"bytes,17,rep,name=script_parameters,json=scriptParameters,proto3" json:"script_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Max time to wait for network activity
	MaxInactivityTimeMs  int64    `protobuf:"varint,18,opt,name=max_inactivity_time_ms,json=maxInactivityTimeMs,proto3" json:"max_inactivity_time_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrowserConfig) Reset()         { *m = BrowserConfig{} }
func (m *BrowserConfig) String() string { return proto.CompactTextString(m) }
func (*BrowserConfig) ProtoMessage()    {}
func (*BrowserConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{11}
}

func (m *BrowserConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrowserConfig.Unmarshal(m, b)
}
func (m *BrowserConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrowserConfig.Marshal(b, m, deterministic)
}
func (m *BrowserConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrowserConfig.Merge(m, src)
}
func (m *BrowserConfig) XXX_Size() int {
	return xxx_messageInfo_BrowserConfig.Size(m)
}
func (m *BrowserConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BrowserConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BrowserConfig proto.InternalMessageInfo

func (m *BrowserConfig) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *BrowserConfig) GetWindowWidth() int32 {
	if m != nil {
		return m.WindowWidth
	}
	return 0
}

func (m *BrowserConfig) GetWindowHeight() int32 {
	if m != nil {
		return m.WindowHeight
	}
	return 0
}

func (m *BrowserConfig) GetPageLoadTimeoutMs() int64 {
	if m != nil {
		return m.PageLoadTimeoutMs
	}
	return 0
}

func (m *BrowserConfig) GetScriptSelector() []string {
	if m != nil {
		return m.ScriptSelector
	}
	return nil
}

func (m *BrowserConfig) GetScriptRef() []*ConfigRef {
	if m != nil {
		return m.ScriptRef
	}
	return nil
}

func (m *BrowserConfig) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *BrowserConfig) GetScriptParameters() map[string]string {
	if m != nil {
		return m.ScriptParameters
	}
	return nil
}

func (m *BrowserConfig) GetMaxInactivityTimeMs() int64 {
	if m != nil {
		return m.MaxInactivityTimeMs
	}
	return 0
}

type PolitenessConfig struct {
	RobotsPolicy                   PolitenessConfig_RobotsPolicy `protobuf:"varint,3,opt,name=robots_policy,json=robotsPolicy,proto3,enum=veidemann.api.config.v1.PolitenessConfig_RobotsPolicy" json:"robots_policy,omitempty"`
	MinimumRobotsValidityDurationS int32                         `protobuf:"varint,11,opt,name=minimum_robots_validity_duration_s,json=minimumRobotsValidityDurationS,proto3" json:"minimum_robots_validity_duration_s,omitempty"`
	CustomRobots                   string                        `protobuf:"bytes,20,opt,name=custom_robots,json=customRobots,proto3" json:"custom_robots,omitempty"`
	MinTimeBetweenPageLoadMs       int64                         `protobuf:"varint,4,opt,name=min_time_between_page_load_ms,json=minTimeBetweenPageLoadMs,proto3" json:"min_time_between_page_load_ms,omitempty"`
	MaxTimeBetweenPageLoadMs       int64                         `protobuf:"varint,5,opt,name=max_time_between_page_load_ms,json=maxTimeBetweenPageLoadMs,proto3" json:"max_time_between_page_load_ms,omitempty"`
	//*
	// The fetch time of the URI is multiplied with this value to get the delay time before fetching the next URI.
	// If min_time_between_page_load_ms and/or max_time_between_page_load_ms are set, then those values are used as
	// the upper/lower limits for delay.
	// If delay_factor is unset or zero, then a delay_facor of one is assumed. If delay_factor is negative,
	// a delay_factor of zero is assumed.
	DelayFactor       float32 `protobuf:"fixed32,6,opt,name=delay_factor,json=delayFactor,proto3" json:"delay_factor,omitempty"`
	MaxRetries        int32   `protobuf:"varint,7,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	RetryDelaySeconds int32   `protobuf:"varint,8,opt,name=retry_delay_seconds,json=retryDelaySeconds,proto3" json:"retry_delay_seconds,omitempty"`
	// Select crawl host groups by label
	// A string representing a label query. The query matches if at least one label matches the query.
	// If there are multiple queries, then each query must match at least one label.
	// Label quries are case insensitive. The basic format is <code>key:value</code> where both key and value must match.
	// If value ends with <code>&ast;</code> then the key must match and value must match up until the <code>&ast;</code>.
	// If value is empty, all labels matching the key will match.
	// If key is empty, then the matching is done on the value for all keys.
	// If key is empty, then the <code>:</code> might be ommitted.
	// <pre>
	// Examples:
	//   "foo:bar"  - matches exactly labels with key=foo and value=bar
	//   "foo:"     - matches all labels with key=foo
	//   ":bar"     - matches all labels with value=bar
	//   "bar"      - matches all labels with value=bar
	//   "foo:ba*"  - matches labels with key=foo and value starting with ba (e.g. matches bar, but not ber)
	//   ":ba*"     - matches labels with any key and value starting with ba (e.g. matches bar, but not ber)
	//   "ba*"      - matches labels with any key and value starting with ba (e.g. matches bar, but not ber)
	//   ":"        - matches every label
	//   ""         - matches every label
	// </pre>
	CrawlHostGroupSelector []string `protobuf:"bytes,9,rep,name=crawl_host_group_selector,json=crawlHostGroupSelector,proto3" json:"crawl_host_group_selector,omitempty"`
	// If true, use hostname instead of ip for politeness
	UseHostname          bool     `protobuf:"varint,10,opt,name=use_hostname,json=useHostname,proto3" json:"use_hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolitenessConfig) Reset()         { *m = PolitenessConfig{} }
func (m *PolitenessConfig) String() string { return proto.CompactTextString(m) }
func (*PolitenessConfig) ProtoMessage()    {}
func (*PolitenessConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{12}
}

func (m *PolitenessConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolitenessConfig.Unmarshal(m, b)
}
func (m *PolitenessConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolitenessConfig.Marshal(b, m, deterministic)
}
func (m *PolitenessConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolitenessConfig.Merge(m, src)
}
func (m *PolitenessConfig) XXX_Size() int {
	return xxx_messageInfo_PolitenessConfig.Size(m)
}
func (m *PolitenessConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PolitenessConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PolitenessConfig proto.InternalMessageInfo

func (m *PolitenessConfig) GetRobotsPolicy() PolitenessConfig_RobotsPolicy {
	if m != nil {
		return m.RobotsPolicy
	}
	return PolitenessConfig_OBEY_ROBOTS
}

func (m *PolitenessConfig) GetMinimumRobotsValidityDurationS() int32 {
	if m != nil {
		return m.MinimumRobotsValidityDurationS
	}
	return 0
}

func (m *PolitenessConfig) GetCustomRobots() string {
	if m != nil {
		return m.CustomRobots
	}
	return ""
}

func (m *PolitenessConfig) GetMinTimeBetweenPageLoadMs() int64 {
	if m != nil {
		return m.MinTimeBetweenPageLoadMs
	}
	return 0
}

func (m *PolitenessConfig) GetMaxTimeBetweenPageLoadMs() int64 {
	if m != nil {
		return m.MaxTimeBetweenPageLoadMs
	}
	return 0
}

func (m *PolitenessConfig) GetDelayFactor() float32 {
	if m != nil {
		return m.DelayFactor
	}
	return 0
}

func (m *PolitenessConfig) GetMaxRetries() int32 {
	if m != nil {
		return m.MaxRetries
	}
	return 0
}

func (m *PolitenessConfig) GetRetryDelaySeconds() int32 {
	if m != nil {
		return m.RetryDelaySeconds
	}
	return 0
}

func (m *PolitenessConfig) GetCrawlHostGroupSelector() []string {
	if m != nil {
		return m.CrawlHostGroupSelector
	}
	return nil
}

func (m *PolitenessConfig) GetUseHostname() bool {
	if m != nil {
		return m.UseHostname
	}
	return false
}

type ExtraConfig struct {
	ExtractText          bool     `protobuf:"varint,5,opt,name=extract_text,json=extractText,proto3" json:"extract_text,omitempty"`
	CreateSnapshot       bool     `protobuf:"varint,6,opt,name=create_snapshot,json=createSnapshot,proto3" json:"create_snapshot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtraConfig) Reset()         { *m = ExtraConfig{} }
func (m *ExtraConfig) String() string { return proto.CompactTextString(m) }
func (*ExtraConfig) ProtoMessage()    {}
func (*ExtraConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{13}
}

func (m *ExtraConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtraConfig.Unmarshal(m, b)
}
func (m *ExtraConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtraConfig.Marshal(b, m, deterministic)
}
func (m *ExtraConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtraConfig.Merge(m, src)
}
func (m *ExtraConfig) XXX_Size() int {
	return xxx_messageInfo_ExtraConfig.Size(m)
}
func (m *ExtraConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtraConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ExtraConfig proto.InternalMessageInfo

func (m *ExtraConfig) GetExtractText() bool {
	if m != nil {
		return m.ExtractText
	}
	return false
}

func (m *ExtraConfig) GetCreateSnapshot() bool {
	if m != nil {
		return m.CreateSnapshot
	}
	return false
}

// Message containing a javascript to be run in a browser
type BrowserScript struct {
	Script               string   `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
	UrlRegexp            string   `protobuf:"bytes,4,opt,name=url_regexp,json=urlRegexp,proto3" json:"url_regexp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrowserScript) Reset()         { *m = BrowserScript{} }
func (m *BrowserScript) String() string { return proto.CompactTextString(m) }
func (*BrowserScript) ProtoMessage()    {}
func (*BrowserScript) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{14}
}

func (m *BrowserScript) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrowserScript.Unmarshal(m, b)
}
func (m *BrowserScript) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrowserScript.Marshal(b, m, deterministic)
}
func (m *BrowserScript) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrowserScript.Merge(m, src)
}
func (m *BrowserScript) XXX_Size() int {
	return xxx_messageInfo_BrowserScript.Size(m)
}
func (m *BrowserScript) XXX_DiscardUnknown() {
	xxx_messageInfo_BrowserScript.DiscardUnknown(m)
}

var xxx_messageInfo_BrowserScript proto.InternalMessageInfo

func (m *BrowserScript) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *BrowserScript) GetUrlRegexp() string {
	if m != nil {
		return m.UrlRegexp
	}
	return ""
}

type CrawlHostGroupConfig struct {
	IpRange              []*CrawlHostGroupConfig_IpRange `protobuf:"bytes,3,rep,name=ip_range,json=ipRange,proto3" json:"ip_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CrawlHostGroupConfig) Reset()         { *m = CrawlHostGroupConfig{} }
func (m *CrawlHostGroupConfig) String() string { return proto.CompactTextString(m) }
func (*CrawlHostGroupConfig) ProtoMessage()    {}
func (*CrawlHostGroupConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{15}
}

func (m *CrawlHostGroupConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlHostGroupConfig.Unmarshal(m, b)
}
func (m *CrawlHostGroupConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlHostGroupConfig.Marshal(b, m, deterministic)
}
func (m *CrawlHostGroupConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlHostGroupConfig.Merge(m, src)
}
func (m *CrawlHostGroupConfig) XXX_Size() int {
	return xxx_messageInfo_CrawlHostGroupConfig.Size(m)
}
func (m *CrawlHostGroupConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlHostGroupConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlHostGroupConfig proto.InternalMessageInfo

func (m *CrawlHostGroupConfig) GetIpRange() []*CrawlHostGroupConfig_IpRange {
	if m != nil {
		return m.IpRange
	}
	return nil
}

type CrawlHostGroupConfig_IpRange struct {
	IpFrom               string   `protobuf:"bytes,1,opt,name=ip_from,json=ipFrom,proto3" json:"ip_from,omitempty"`
	IpTo                 string   `protobuf:"bytes,2,opt,name=ip_to,json=ipTo,proto3" json:"ip_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrawlHostGroupConfig_IpRange) Reset()         { *m = CrawlHostGroupConfig_IpRange{} }
func (m *CrawlHostGroupConfig_IpRange) String() string { return proto.CompactTextString(m) }
func (*CrawlHostGroupConfig_IpRange) ProtoMessage()    {}
func (*CrawlHostGroupConfig_IpRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{15, 0}
}

func (m *CrawlHostGroupConfig_IpRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlHostGroupConfig_IpRange.Unmarshal(m, b)
}
func (m *CrawlHostGroupConfig_IpRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlHostGroupConfig_IpRange.Marshal(b, m, deterministic)
}
func (m *CrawlHostGroupConfig_IpRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlHostGroupConfig_IpRange.Merge(m, src)
}
func (m *CrawlHostGroupConfig_IpRange) XXX_Size() int {
	return xxx_messageInfo_CrawlHostGroupConfig_IpRange.Size(m)
}
func (m *CrawlHostGroupConfig_IpRange) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlHostGroupConfig_IpRange.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlHostGroupConfig_IpRange proto.InternalMessageInfo

func (m *CrawlHostGroupConfig_IpRange) GetIpFrom() string {
	if m != nil {
		return m.IpFrom
	}
	return ""
}

func (m *CrawlHostGroupConfig_IpRange) GetIpTo() string {
	if m != nil {
		return m.IpTo
	}
	return ""
}

type RoleMapping struct {
	// Types that are valid to be assigned to EmailOrGroup:
	//	*RoleMapping_Email
	//	*RoleMapping_Group
	EmailOrGroup         isRoleMapping_EmailOrGroup `protobuf_oneof:"email_or_group"`
	Role                 []Role                     `protobuf:"varint,4,rep,packed,name=role,proto3,enum=veidemann.api.config.v1.Role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RoleMapping) Reset()         { *m = RoleMapping{} }
func (m *RoleMapping) String() string { return proto.CompactTextString(m) }
func (*RoleMapping) ProtoMessage()    {}
func (*RoleMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{16}
}

func (m *RoleMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleMapping.Unmarshal(m, b)
}
func (m *RoleMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleMapping.Marshal(b, m, deterministic)
}
func (m *RoleMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleMapping.Merge(m, src)
}
func (m *RoleMapping) XXX_Size() int {
	return xxx_messageInfo_RoleMapping.Size(m)
}
func (m *RoleMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleMapping.DiscardUnknown(m)
}

var xxx_messageInfo_RoleMapping proto.InternalMessageInfo

type isRoleMapping_EmailOrGroup interface {
	isRoleMapping_EmailOrGroup()
}

type RoleMapping_Email struct {
	Email string `protobuf:"bytes,2,opt,name=email,proto3,oneof"`
}

type RoleMapping_Group struct {
	Group string `protobuf:"bytes,3,opt,name=group,proto3,oneof"`
}

func (*RoleMapping_Email) isRoleMapping_EmailOrGroup() {}

func (*RoleMapping_Group) isRoleMapping_EmailOrGroup() {}

func (m *RoleMapping) GetEmailOrGroup() isRoleMapping_EmailOrGroup {
	if m != nil {
		return m.EmailOrGroup
	}
	return nil
}

func (m *RoleMapping) GetEmail() string {
	if x, ok := m.GetEmailOrGroup().(*RoleMapping_Email); ok {
		return x.Email
	}
	return ""
}

func (m *RoleMapping) GetGroup() string {
	if x, ok := m.GetEmailOrGroup().(*RoleMapping_Group); ok {
		return x.Group
	}
	return ""
}

func (m *RoleMapping) GetRole() []Role {
	if m != nil {
		return m.Role
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RoleMapping) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RoleMapping_Email)(nil),
		(*RoleMapping_Group)(nil),
	}
}

type Collection struct {
	CollectionDedupPolicy Collection_RotationPolicy   `protobuf:"varint,1,opt,name=collection_dedup_policy,json=collectionDedupPolicy,proto3,enum=veidemann.api.config.v1.Collection_RotationPolicy" json:"collection_dedup_policy,omitempty"`
	FileRotationPolicy    Collection_RotationPolicy   `protobuf:"varint,2,opt,name=file_rotation_policy,json=fileRotationPolicy,proto3,enum=veidemann.api.config.v1.Collection_RotationPolicy" json:"file_rotation_policy,omitempty"`
	Compress              bool                        `protobuf:"varint,3,opt,name=compress,proto3" json:"compress,omitempty"`
	FileSize              int64                       `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	SubCollections        []*Collection_SubCollection `protobuf:"bytes,10,rep,name=sub_collections,json=subCollections,proto3" json:"sub_collections,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                    `json:"-"`
	XXX_unrecognized      []byte                      `json:"-"`
	XXX_sizecache         int32                       `json:"-"`
}

func (m *Collection) Reset()         { *m = Collection{} }
func (m *Collection) String() string { return proto.CompactTextString(m) }
func (*Collection) ProtoMessage()    {}
func (*Collection) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{17}
}

func (m *Collection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collection.Unmarshal(m, b)
}
func (m *Collection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collection.Marshal(b, m, deterministic)
}
func (m *Collection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collection.Merge(m, src)
}
func (m *Collection) XXX_Size() int {
	return xxx_messageInfo_Collection.Size(m)
}
func (m *Collection) XXX_DiscardUnknown() {
	xxx_messageInfo_Collection.DiscardUnknown(m)
}

var xxx_messageInfo_Collection proto.InternalMessageInfo

func (m *Collection) GetCollectionDedupPolicy() Collection_RotationPolicy {
	if m != nil {
		return m.CollectionDedupPolicy
	}
	return Collection_NONE
}

func (m *Collection) GetFileRotationPolicy() Collection_RotationPolicy {
	if m != nil {
		return m.FileRotationPolicy
	}
	return Collection_NONE
}

func (m *Collection) GetCompress() bool {
	if m != nil {
		return m.Compress
	}
	return false
}

func (m *Collection) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *Collection) GetSubCollections() []*Collection_SubCollection {
	if m != nil {
		return m.SubCollections
	}
	return nil
}

type Collection_SubCollection struct {
	Type                 Collection_SubCollectionType `protobuf:"varint,1,opt,name=type,proto3,enum=veidemann.api.config.v1.Collection_SubCollectionType" json:"type,omitempty"`
	Name                 string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Collection_SubCollection) Reset()         { *m = Collection_SubCollection{} }
func (m *Collection_SubCollection) String() string { return proto.CompactTextString(m) }
func (*Collection_SubCollection) ProtoMessage()    {}
func (*Collection_SubCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_c17cc9b7f4795fca, []int{17, 0}
}

func (m *Collection_SubCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collection_SubCollection.Unmarshal(m, b)
}
func (m *Collection_SubCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collection_SubCollection.Marshal(b, m, deterministic)
}
func (m *Collection_SubCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collection_SubCollection.Merge(m, src)
}
func (m *Collection_SubCollection) XXX_Size() int {
	return xxx_messageInfo_Collection_SubCollection.Size(m)
}
func (m *Collection_SubCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_Collection_SubCollection.DiscardUnknown(m)
}

var xxx_messageInfo_Collection_SubCollection proto.InternalMessageInfo

func (m *Collection_SubCollection) GetType() Collection_SubCollectionType {
	if m != nil {
		return m.Type
	}
	return Collection_UNDEFINED
}

func (m *Collection_SubCollection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("veidemann.api.config.v1.Kind", Kind_name, Kind_value)
	proto.RegisterEnum("veidemann.api.config.v1.Role", Role_name, Role_value)
	proto.RegisterEnum("veidemann.api.config.v1.PolitenessConfig_RobotsPolicy", PolitenessConfig_RobotsPolicy_name, PolitenessConfig_RobotsPolicy_value)
	proto.RegisterEnum("veidemann.api.config.v1.Collection_RotationPolicy", Collection_RotationPolicy_name, Collection_RotationPolicy_value)
	proto.RegisterEnum("veidemann.api.config.v1.Collection_SubCollectionType", Collection_SubCollectionType_name, Collection_SubCollectionType_value)
	proto.RegisterType((*ConfigObject)(nil), "veidemann.api.config.v1.ConfigObject")
	proto.RegisterType((*Meta)(nil), "veidemann.api.config.v1.Meta")
	proto.RegisterType((*Label)(nil), "veidemann.api.config.v1.Label")
	proto.RegisterType((*ConfigRef)(nil), "veidemann.api.config.v1.ConfigRef")
	proto.RegisterType((*CrawlEntity)(nil), "veidemann.api.config.v1.CrawlEntity")
	proto.RegisterType((*Seed)(nil), "veidemann.api.config.v1.Seed")
	proto.RegisterType((*CrawlJob)(nil), "veidemann.api.config.v1.CrawlJob")
	proto.RegisterType((*CrawlConfig)(nil), "veidemann.api.config.v1.CrawlConfig")
	proto.RegisterType((*CrawlScheduleConfig)(nil), "veidemann.api.config.v1.CrawlScheduleConfig")
	proto.RegisterType((*CrawlScope)(nil), "veidemann.api.config.v1.CrawlScope")
	proto.RegisterType((*CrawlLimitsConfig)(nil), "veidemann.api.config.v1.CrawlLimitsConfig")
	proto.RegisterType((*BrowserConfig)(nil), "veidemann.api.config.v1.BrowserConfig")
	proto.RegisterMapType((map[string]string)(nil), "veidemann.api.config.v1.BrowserConfig.HeadersEntry")
	proto.RegisterMapType((map[string]string)(nil), "veidemann.api.config.v1.BrowserConfig.ScriptParametersEntry")
	proto.RegisterType((*PolitenessConfig)(nil), "veidemann.api.config.v1.PolitenessConfig")
	proto.RegisterType((*ExtraConfig)(nil), "veidemann.api.config.v1.ExtraConfig")
	proto.RegisterType((*BrowserScript)(nil), "veidemann.api.config.v1.BrowserScript")
	proto.RegisterType((*CrawlHostGroupConfig)(nil), "veidemann.api.config.v1.CrawlHostGroupConfig")
	proto.RegisterType((*CrawlHostGroupConfig_IpRange)(nil), "veidemann.api.config.v1.CrawlHostGroupConfig.IpRange")
	proto.RegisterType((*RoleMapping)(nil), "veidemann.api.config.v1.RoleMapping")
	proto.RegisterType((*Collection)(nil), "veidemann.api.config.v1.Collection")
	proto.RegisterType((*Collection_SubCollection)(nil), "veidemann.api.config.v1.Collection.SubCollection")
}

func init() { proto.RegisterFile("config/v1/resources.proto", fileDescriptor_c17cc9b7f4795fca) }

var fileDescriptor_c17cc9b7f4795fca = []byte{
	// 2177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x58, 0x5d, 0x72, 0xdb, 0xc8,
	0x11, 0x16, 0xff, 0xc9, 0xe6, 0x8f, 0xa0, 0xb1, 0xd6, 0xe6, 0x2a, 0x65, 0xaf, 0x0c, 0x6f, 0x25,
	0x5a, 0x57, 0x4c, 0x95, 0xed, 0x75, 0x12, 0xdb, 0xa9, 0xda, 0x88, 0x12, 0xbd, 0x94, 0x23, 0x91,
	0xaa, 0x21, 0xbd, 0x1b, 0x6d, 0x1e, 0x50, 0x20, 0x30, 0xa4, 0x46, 0x0b, 0x60, 0x50, 0x18, 0x50,
	0x22, 0xf7, 0x31, 0xa9, 0x9c, 0x20, 0x27, 0xc8, 0x0d, 0x52, 0xb9, 0x4f, 0x2a, 0x17, 0xc8, 0x0d,
	0xf2, 0x90, 0xd4, 0xfc, 0x10, 0x84, 0x6c, 0x49, 0xa6, 0xf3, 0x86, 0xf9, 0xd0, 0xfd, 0xf5, 0xa0,
	0x31, 0xfd, 0x75, 0x03, 0xf0, 0xb9, 0xc3, 0x82, 0x31, 0x9d, 0xec, 0x5e, 0x3c, 0xdd, 0x8d, 0x08,
	0x67, 0xd3, 0xc8, 0x21, 0xbc, 0x15, 0x46, 0x2c, 0x66, 0xe8, 0xde, 0x05, 0xa1, 0x2e, 0xf1, 0xed,
	0x20, 0x68, 0xd9, 0x21, 0x6d, 0x29, 0xc3, 0xd6, 0xc5, 0xd3, 0xad, 0x2f, 0x26, 0x8c, 0x4d, 0x3c,
	0xb2, 0x2b, 0xcd, 0x46, 0xd3, 0xf1, 0x6e, 0x4c, 0x7d, 0xc2, 0x63, 0xdb, 0x0f, 0x95, 0xa7, 0xf9,
	0xd7, 0x32, 0xd4, 0xf6, 0xa5, 0x79, 0x7f, 0x74, 0x4e, 0x9c, 0x18, 0x35, 0x20, 0x4b, 0xdd, 0x66,
	0x66, 0x3b, 0xb3, 0x53, 0xc1, 0x59, 0xea, 0xa2, 0x07, 0x00, 0x76, 0x48, 0xbf, 0x23, 0x11, 0xa7,
	0x2c, 0x68, 0x66, 0x25, 0x9e, 0x42, 0xd0, 0x53, 0xc8, 0xff, 0x48, 0x03, 0xb7, 0x99, 0xdb, 0xce,
	0xec, 0x34, 0x9e, 0xdd, 0x6f, 0xdd, 0xb0, 0x93, 0xd6, 0xef, 0x69, 0xe0, 0x62, 0x69, 0x2a, 0x5c,
	0x7c, 0x12, 0xdb, 0xcd, 0xfc, 0x76, 0x66, 0xa7, 0x7a, 0x8b, 0xcb, 0x31, 0x89, 0x6d, 0x2c, 0x4d,
	0xd1, 0x21, 0xd4, 0x9c, 0xc8, 0xbe, 0xf4, 0x2c, 0x12, 0xc4, 0x34, 0x9e, 0x37, 0x0b, 0xd2, 0xf5,
	0xcb, 0x1b, 0x5d, 0xf7, 0x85, 0x71, 0x47, 0xda, 0x76, 0xd7, 0x70, 0xd5, 0x59, 0x2e, 0xd1, 0x73,
	0xc8, 0x73, 0x42, 0xdc, 0x66, 0xf1, 0x23, 0xd1, 0x07, 0x84, 0xb8, 0xdd, 0x35, 0x2c, 0x8d, 0xd1,
	0xef, 0xa0, 0xa2, 0xe2, 0x9f, 0xb3, 0x51, 0xb3, 0x24, 0x3d, 0x1f, 0xde, 0x1e, 0xfc, 0x2d, 0x1b,
	0x75, 0xd7, 0x70, 0xd9, 0xd1, 0xd7, 0xcb, 0x27, 0x50, 0x76, 0xcd, 0xf2, 0x2a, 0x4f, 0xa0, 0xde,
	0x4c, 0xf2, 0x04, 0x6a, 0x89, 0x46, 0xf0, 0x99, 0xa2, 0xe2, 0xce, 0x19, 0x71, 0xa7, 0x1e, 0x59,
	0x70, 0x56, 0x24, 0xe7, 0x2f, 0x6f, 0xe7, 0x1c, 0x68, 0xa7, 0x84, 0xfb, 0x8e, 0xf3, 0x21, 0x8c,
	0xfa, 0xd0, 0x18, 0x45, 0xec, 0x92, 0x93, 0x68, 0x41, 0x0e, 0x92, 0xfc, 0xe7, 0x37, 0x92, 0xb7,
	0x95, 0x79, 0x42, 0x5b, 0x1f, 0xa5, 0x01, 0xf4, 0x07, 0xd8, 0x08, 0x99, 0x47, 0x63, 0x12, 0x10,
	0xce, 0x17, 0x9c, 0x55, 0xc9, 0xf9, 0xd5, 0x8d, 0x9c, 0x27, 0x89, 0x47, 0x42, 0x6b, 0x84, 0xef,
	0x61, 0xe9, 0xad, 0x72, 0x27, 0xa2, 0x61, 0xdc, 0xac, 0xad, 0xb6, 0xd5, 0x81, 0xb4, 0x4e, 0x6d,
	0x55, 0x01, 0x68, 0x0c, 0xf7, 0x54, 0x7e, 0xcf, 0x18, 0x8f, 0xad, 0x49, 0xc4, 0xa6, 0xe1, 0x62,
	0xc3, 0x75, 0xc9, 0xfc, 0xe4, 0xf6, 0x0c, 0x77, 0x19, 0x8f, 0xbf, 0x15, 0x5e, 0xc9, 0xa6, 0x37,
	0x9d, 0x6b, 0x70, 0x71, 0x24, 0x22, 0xe6, 0x11, 0xcb, 0xb7, 0xc3, 0x90, 0x06, 0x93, 0x66, 0xe3,
	0x23, 0x47, 0x02, 0x33, 0x8f, 0x1c, 0x2b, 0x5b, 0x71, 0x24, 0xa2, 0xe5, 0x12, 0x75, 0x00, 0x1c,
	0xe6, 0x79, 0xc4, 0x89, 0x45, 0x95, 0xae, 0x4b, 0xa2, 0x47, 0x37, 0xef, 0x32, 0x31, 0xed, 0xae,
	0xe1, 0x94, 0x63, 0xbb, 0x08, 0x79, 0x1e, 0x12, 0xc7, 0xfc, 0x47, 0x16, 0xf2, 0xa2, 0xfa, 0x10,
	0x82, 0x7c, 0x60, 0xfb, 0x44, 0xeb, 0x81, 0xbc, 0x46, 0xdb, 0x50, 0x75, 0x89, 0xca, 0xf4, 0x52,
	0x12, 0xd2, 0x10, 0xfa, 0x1a, 0x4a, 0x4e, 0x44, 0xec, 0x98, 0x28, 0x59, 0xa8, 0x3e, 0xdb, 0x6a,
	0x29, 0x1d, 0x6a, 0x2d, 0x74, 0xa8, 0x35, 0x5c, 0xe8, 0x10, 0x5e, 0x98, 0xa2, 0xfb, 0x00, 0xfa,
	0xd2, 0x1a, 0xcd, 0xa5, 0x38, 0x54, 0x70, 0x45, 0x23, 0xed, 0x39, 0xfa, 0x06, 0xea, 0x9e, 0xcd,
	0x63, 0xcb, 0x67, 0x2e, 0x1d, 0x53, 0xe2, 0x6a, 0x0d, 0xb8, 0x8d, 0xba, 0x26, 0x1c, 0x8e, 0xb5,
	0x3d, 0xda, 0x01, 0xe3, 0x0a, 0x81, 0x88, 0x52, 0x94, 0x51, 0x1a, 0x69, 0xbb, 0xf6, 0x1c, 0x7d,
	0x0d, 0x05, 0xcf, 0x1e, 0x11, 0xaf, 0x59, 0xda, 0xce, 0xed, 0x54, 0x9f, 0x3d, 0xb8, 0x31, 0x91,
	0x47, 0xc2, 0x0a, 0x2b, 0x63, 0x73, 0x17, 0x0a, 0x72, 0x8d, 0x0c, 0xc8, 0xfd, 0x48, 0xe6, 0x3a,
	0x67, 0xe2, 0x12, 0x6d, 0x42, 0xe1, 0xc2, 0xf6, 0xa6, 0x44, 0x27, 0x4b, 0x2d, 0xcc, 0x1e, 0x54,
	0xd4, 0x49, 0xc0, 0x64, 0x9c, 0xe8, 0x68, 0x66, 0x75, 0x1d, 0x55, 0x52, 0x9d, 0x5d, 0x48, 0xb5,
	0x59, 0x87, 0x6a, 0x4a, 0xf7, 0xcc, 0x7f, 0x66, 0x20, 0x2f, 0x44, 0x0c, 0xed, 0x01, 0x28, 0xd9,
	0xb4, 0x22, 0x32, 0xd6, 0x6f, 0xc4, 0xbc, 0xe5, 0x70, 0xe8, 0x2d, 0xe1, 0x8a, 0xf2, 0x12, 0xbb,
	0x7b, 0x09, 0x05, 0xee, 0xb0, 0x90, 0x68, 0xcd, 0x7e, 0xf4, 0x31, 0x89, 0x61, 0x21, 0xc1, 0xca,
	0x03, 0xbd, 0x86, 0xd2, 0x39, 0x1b, 0xc9, 0xd0, 0x05, 0x99, 0xce, 0x55, 0x42, 0x17, 0xcf, 0xd9,
	0x48, 0xc4, 0xdd, 0x82, 0xb2, 0x4b, 0xb9, 0x3d, 0xf2, 0x88, 0xdb, 0x44, 0xdb, 0x99, 0x9d, 0x32,
	0x4e, 0xd6, 0xe6, 0x7f, 0x33, 0x50, 0x5e, 0x48, 0x2d, 0xea, 0x40, 0x2d, 0x51, 0xc3, 0x4f, 0x7b,
	0xca, 0xea, 0xc2, 0x4f, 0xc4, 0x6b, 0x43, 0xd1, 0xa3, 0x3e, 0x8d, 0xb9, 0x7e, 0xd0, 0xc7, 0xb7,
	0x3f, 0xe8, 0x91, 0xb4, 0xd5, 0x5c, 0xda, 0x13, 0x1d, 0x81, 0x91, 0x56, 0x7a, 0xfd, 0xe4, 0xab,
	0x6e, 0xa7, 0x91, 0x52, 0xfa, 0x8f, 0x65, 0xe0, 0x2f, 0x39, 0xfd, 0xc6, 0x13, 0x41, 0x69, 0x2c,
	0x8b, 0x59, 0xc6, 0x2d, 0xae, 0x1c, 0xb7, 0xbe, 0xf4, 0x14, 0x61, 0x4f, 0x00, 0x5d, 0xd5, 0x7f,
	0x49, 0x57, 0x5a, 0x99, 0xce, 0xb8, 0xa2, 0xfe, 0x82, 0xf1, 0x10, 0x1a, 0xa9, 0x06, 0x20, 0xd8,
	0xca, 0xab, 0x6f, 0x6e, 0xe9, 0x29, 0xa8, 0x5e, 0x41, 0x81, 0xcc, 0xe2, 0xc8, 0xd6, 0x0d, 0xef,
	0x66, 0xc5, 0xec, 0x08, 0x2b, 0x4d, 0xa3, 0x5c, 0xd0, 0x57, 0xb0, 0xe1, 0xd3, 0x80, 0xfa, 0x53,
	0xdf, 0x72, 0x03, 0x6e, 0xc5, 0xb1, 0x67, 0x71, 0xd9, 0xdb, 0x0a, 0xb8, 0xa1, 0x6f, 0x1c, 0x04,
	0x7c, 0x18, 0x7b, 0x03, 0xf4, 0x0b, 0x58, 0x0f, 0x23, 0xca, 0x22, 0x51, 0x39, 0x97, 0x84, 0x4e,
	0xce, 0x62, 0xd9, 0xb0, 0x32, 0xb8, 0xb1, 0x80, 0xbf, 0x97, 0xa8, 0xf9, 0xf7, 0x0c, 0xdc, 0xb9,
	0xa6, 0xb7, 0x0a, 0x02, 0x27, 0x62, 0x81, 0x45, 0x66, 0x61, 0x44, 0xb8, 0x1c, 0xa0, 0x72, 0x4a,
	0x70, 0x04, 0xdc, 0x49, 0x50, 0xf4, 0x12, 0xe0, 0xc2, 0xf6, 0xa8, 0x6b, 0x8d, 0x23, 0xe6, 0xeb,
	0xa3, 0x77, 0x9b, 0xb0, 0x55, 0xa4, 0xf5, 0x9b, 0x88, 0xf9, 0xe8, 0x05, 0x94, 0x95, 0x6b, 0xcc,
	0x56, 0x50, 0xc4, 0x92, 0xb4, 0x1d, 0x32, 0xf3, 0x09, 0xc0, 0xb2, 0x54, 0xd1, 0x17, 0x50, 0xe5,
	0xd3, 0x28, 0xb6, 0xc2, 0x88, 0x8c, 0xe9, 0x4c, 0x2b, 0x17, 0x08, 0xe8, 0x44, 0x22, 0xa6, 0x07,
	0x1b, 0x1f, 0x1c, 0x78, 0xa1, 0x6a, 0x2e, 0x09, 0xe3, 0x33, 0x69, 0x5f, 0xc0, 0x6a, 0x81, 0xbe,
	0x84, 0x86, 0x6f, 0xcf, 0x2c, 0x77, 0x1a, 0xd9, 0xf2, 0x18, 0x72, 0xa9, 0x50, 0x39, 0x5c, 0xf3,
	0xed, 0xd9, 0x81, 0x06, 0x07, 0xe8, 0x67, 0x50, 0x11, 0x56, 0xa3, 0x79, 0x4c, 0xb8, 0x4c, 0x4a,
	0x0e, 0x97, 0x7d, 0x7b, 0xd6, 0x16, 0x6b, 0xf3, 0xcf, 0x05, 0xa8, 0x5f, 0x19, 0x27, 0x44, 0x6f,
	0x98, 0x8a, 0xb3, 0x68, 0x4f, 0x48, 0x10, 0xeb, 0x24, 0x56, 0x04, 0xb2, 0x27, 0x00, 0xf4, 0x10,
	0x6a, 0x97, 0x34, 0x70, 0xd9, 0xa5, 0x75, 0x49, 0xdd, 0xf8, 0x4c, 0x66, 0xb0, 0x80, 0xab, 0x0a,
	0xfb, 0x5e, 0x40, 0xe8, 0x11, 0xd4, 0xb5, 0xc9, 0x99, 0x7a, 0x95, 0x05, 0x69, 0xa3, 0xfd, 0xba,
	0x12, 0x43, 0xbb, 0xb0, 0x19, 0xda, 0x13, 0x62, 0x79, 0xcc, 0x76, 0x2d, 0x31, 0x2a, 0xb3, 0x69,
	0x6c, 0xf9, 0x5c, 0x96, 0x51, 0x0e, 0x6f, 0x88, 0x7b, 0x47, 0xcc, 0x76, 0x87, 0xea, 0xce, 0x31,
	0x17, 0x6f, 0x58, 0xb5, 0x3d, 0x8b, 0x13, 0x51, 0x3d, 0x2c, 0x92, 0x3d, 0xa3, 0x82, 0x1b, 0x0a,
	0x1e, 0x68, 0x54, 0x68, 0xb0, 0x36, 0x54, 0x27, 0x7f, 0x55, 0x21, 0xac, 0x28, 0x2f, 0x71, 0xea,
	0x8f, 0xa1, 0x74, 0x46, 0x6c, 0x97, 0x44, 0xbc, 0x69, 0x48, 0xff, 0xe7, 0xab, 0xcd, 0x62, 0xad,
	0xae, 0xf2, 0xea, 0x04, 0x71, 0x34, 0xc7, 0x0b, 0x0e, 0x44, 0x61, 0x43, 0xef, 0x28, 0xb4, 0x23,
	0xdb, 0x27, 0xb1, 0x20, 0xde, 0x90, 0xc4, 0xbf, 0x5d, 0x91, 0x58, 0xcd, 0x4b, 0x27, 0x89, 0xbb,
	0x8a, 0x60, 0xf0, 0xf7, 0x60, 0xf4, 0x1c, 0xee, 0x8a, 0x97, 0x4d, 0x03, 0xdb, 0x89, 0xe9, 0x85,
	0x28, 0x27, 0x91, 0x5b, 0x91, 0x58, 0x24, 0x13, 0x7b, 0xc7, 0xb7, 0x67, 0x87, 0xc9, 0x4d, 0x91,
	0xdd, 0x63, 0xbe, 0xf5, 0x0a, 0x6a, 0xe9, 0x8d, 0xaf, 0xda, 0x55, 0x5f, 0x65, 0x7f, 0x93, 0xd9,
	0xda, 0x87, 0xcf, 0xae, 0xdd, 0xdb, 0xa7, 0x90, 0x98, 0xff, 0xc9, 0x83, 0xf1, 0xfe, 0x00, 0x8a,
	0xfe, 0x08, 0xf5, 0x88, 0x8d, 0x58, 0xcc, 0x2d, 0x21, 0x49, 0xce, 0x5c, 0x7f, 0xf7, 0xfc, 0x6a,
	0xe5, 0x11, 0xb6, 0x85, 0xa5, 0xfb, 0x89, 0xf4, 0xc6, 0xb5, 0x28, 0xb5, 0x42, 0x6f, 0xc1, 0x5c,
	0x68, 0x93, 0x0e, 0x22, 0xcb, 0x55, 0x24, 0x2c, 0x55, 0x4e, 0x55, 0x79, 0x70, 0x1f, 0x68, 0x4b,
	0x45, 0xf7, 0x9d, 0xb6, 0x5b, 0x16, 0xd8, 0x23, 0xa8, 0x3b, 0x53, 0x1e, 0xb3, 0x05, 0x55, 0x73,
	0x53, 0x3e, 0x5f, 0x4d, 0x81, 0xca, 0x0b, 0x7d, 0x03, 0xf7, 0x7d, 0x1a, 0xa8, 0xb7, 0x31, 0x22,
	0xf1, 0x25, 0x21, 0x81, 0xb5, 0x2c, 0x00, 0x5f, 0x75, 0xc1, 0x1c, 0x6e, 0xfa, 0x34, 0x10, 0x6f,
	0xa5, 0xad, 0x4c, 0x4e, 0x74, 0x19, 0x1c, 0x2b, 0x02, 0x7b, 0x76, 0x0b, 0x41, 0x41, 0x13, 0xd8,
	0xb3, 0xeb, 0x09, 0x1e, 0x42, 0xcd, 0x25, 0x9e, 0x3d, 0xb7, 0xc6, 0xb6, 0xac, 0x1e, 0x51, 0x69,
	0x59, 0x31, 0x4d, 0x7a, 0xf6, 0xfc, 0x8d, 0x84, 0x84, 0x38, 0x89, 0x18, 0x11, 0x89, 0x23, 0x4a,
	0xb8, 0xec, 0x41, 0x05, 0x0c, 0xbe, 0x3d, 0xc3, 0x0a, 0x41, 0x2d, 0xb8, 0x23, 0x6e, 0xce, 0x2d,
	0xc5, 0xc4, 0x89, 0xc3, 0x02, 0x97, 0xcb, 0xf6, 0x52, 0xc0, 0x1b, 0xf2, 0xd6, 0x81, 0xb8, 0x33,
	0x50, 0x37, 0xd0, 0x4b, 0xf8, 0xfc, 0x83, 0xf9, 0x3e, 0x29, 0xdf, 0x8a, 0x2c, 0xdf, 0xbb, 0x57,
	0x07, 0xf6, 0xa4, 0x8c, 0x1f, 0x42, 0x6d, 0xca, 0x89, 0x74, 0x94, 0x73, 0x31, 0xc8, 0x8e, 0x5c,
	0x9d, 0x72, 0xd2, 0xd5, 0x90, 0xd9, 0x81, 0x5a, 0xfa, 0x15, 0xa3, 0x75, 0xa8, 0xf6, 0xdb, 0x9d,
	0x53, 0x0b, 0xf7, 0xdb, 0xfd, 0xe1, 0xc0, 0x58, 0x43, 0x1b, 0x50, 0x3f, 0xfc, 0xb6, 0xd7, 0xc7,
	0x9d, 0x05, 0x94, 0x11, 0xd0, 0xfe, 0xbb, 0xc1, 0xb0, 0x7f, 0xbc, 0x80, 0xb2, 0xe6, 0x29, 0x54,
	0x53, 0xdd, 0x4b, 0x04, 0x96, 0xfd, 0xcb, 0x89, 0xad, 0x98, 0xcc, 0x94, 0x7a, 0x95, 0x71, 0x55,
	0x63, 0x43, 0x32, 0x8b, 0x55, 0xb7, 0x11, 0xd3, 0xb2, 0xc5, 0x03, 0x3b, 0xe4, 0x67, 0x2c, 0x96,
	0xd9, 0x2c, 0x8b, 0x6e, 0x23, 0xe0, 0x81, 0x46, 0xcd, 0x37, 0x89, 0xba, 0xea, 0x0f, 0x9e, 0xbb,
	0x50, 0xd4, 0x5f, 0x4e, 0x4a, 0x59, 0xf5, 0x4a, 0xaa, 0x6e, 0xe4, 0x59, 0x11, 0x99, 0x90, 0x59,
	0xb8, 0x98, 0xc8, 0xa7, 0x91, 0x87, 0x25, 0x60, 0xfe, 0x2d, 0x03, 0x9b, 0xd7, 0x7d, 0xf0, 0xa0,
	0x13, 0x28, 0xd3, 0xd0, 0x8a, 0xec, 0x60, 0x42, 0x9a, 0x39, 0xa9, 0x28, 0x2f, 0x3e, 0xe9, 0x8b,
	0xa9, 0x75, 0x18, 0x62, 0xe1, 0x8c, 0x4b, 0x54, 0x5d, 0x6c, 0xfd, 0x1a, 0x4a, 0x1a, 0x43, 0xf7,
	0xa0, 0x44, 0x43, 0xd5, 0x28, 0x55, 0x19, 0x17, 0x69, 0x28, 0x3b, 0xe1, 0x1d, 0x28, 0xd0, 0x50,
	0xb4, 0x41, 0x55, 0xc9, 0x79, 0x1a, 0x0e, 0x99, 0xf9, 0xa7, 0x0c, 0x54, 0x53, 0xdf, 0x4d, 0xe8,
	0x2e, 0x14, 0x88, 0x6f, 0x53, 0x4f, 0x19, 0x75, 0xd7, 0xb0, 0x5a, 0x0a, 0x5c, 0x1e, 0x04, 0x95,
	0x01, 0x81, 0xcb, 0xa5, 0x18, 0xcb, 0xc5, 0x77, 0x56, 0x33, 0xbf, 0x9d, 0xbb, 0x75, 0x2c, 0x17,
	0x31, 0xb0, 0x34, 0x6d, 0x1b, 0xd0, 0x90, 0x9c, 0x16, 0x8b, 0xd4, 0xe1, 0x32, 0xff, 0x9d, 0x07,
	0x58, 0x7e, 0x73, 0xa1, 0x73, 0xb8, 0x97, 0x1a, 0xd3, 0x5c, 0xe2, 0x4e, 0xc3, 0x85, 0x9a, 0xa8,
	0xe9, 0xff, 0xd9, 0x0a, 0x5f, 0x6e, 0x2d, 0xcc, 0x62, 0x59, 0xea, 0x5a, 0x49, 0x3e, 0x5b, 0x52,
	0x1e, 0x08, 0x46, 0x7d, 0xfa, 0x5c, 0xd8, 0x1c, 0x53, 0x31, 0x13, 0x6b, 0xeb, 0x45, 0xa0, 0xec,
	0xff, 0x1d, 0x08, 0x09, 0xbe, 0xab, 0x98, 0x18, 0x52, 0x1d, 0xe6, 0xcb, 0x71, 0x46, 0x26, 0xb0,
	0x8c, 0x93, 0xb5, 0xe8, 0xf4, 0x72, 0x07, 0x9c, 0xfe, 0x44, 0xb4, 0x9e, 0x94, 0x05, 0x30, 0xa0,
	0x3f, 0x11, 0xf4, 0x03, 0xac, 0xf3, 0xe9, 0xc8, 0x5a, 0xee, 0x5d, 0xcc, 0x62, 0xe2, 0xc0, 0x3c,
	0x5d, 0x65, 0x67, 0x83, 0xe9, 0x68, 0xb9, 0xc2, 0x0d, 0x9e, 0x5e, 0xf2, 0xad, 0x00, 0xea, 0x57,
	0x0c, 0xd0, 0x21, 0xe4, 0xe3, 0x79, 0x48, 0x74, 0x92, 0x5f, 0x7c, 0x72, 0x84, 0xe1, 0x3c, 0x24,
	0x58, 0x52, 0x24, 0xdf, 0xc5, 0xd9, 0xe5, 0x77, 0xb1, 0xf9, 0x16, 0x1a, 0xef, 0xa5, 0xa5, 0x0c,
	0xf9, 0x5e, 0xbf, 0xd7, 0x31, 0xd6, 0x10, 0x40, 0xb1, 0xdb, 0x7f, 0x87, 0x8f, 0x4e, 0x8d, 0x0c,
	0xaa, 0x40, 0xe1, 0x60, 0xef, 0xf0, 0xe8, 0xd4, 0xc8, 0xa2, 0x2a, 0x94, 0x8e, 0xfb, 0xbd, 0x61,
	0xf7, 0xe8, 0xd4, 0xc8, 0x09, 0x9b, 0xd3, 0xce, 0x9e, 0xb0, 0xc9, 0x9b, 0xaf, 0x61, 0xe3, 0x83,
	0xd0, 0xa8, 0x0e, 0x95, 0x77, 0xbd, 0x83, 0xce, 0x9b, 0xc3, 0x5e, 0xe7, 0xc0, 0x58, 0x43, 0x0d,
	0x80, 0xc1, 0x3e, 0xee, 0x74, 0x7a, 0x83, 0x6e, 0x7f, 0x68, 0x64, 0x50, 0x09, 0x72, 0x07, 0xbd,
	0x81, 0x91, 0x7d, 0xfc, 0xaf, 0x0c, 0xe4, 0xc5, 0x67, 0xa2, 0x70, 0x98, 0x06, 0x2e, 0x19, 0xd3,
	0x80, 0xb8, 0xc6, 0x9a, 0x50, 0xa2, 0xd4, 0x8f, 0x30, 0xa3, 0x20, 0xf6, 0xc7, 0x09, 0x71, 0x8d,
	0x22, 0xaa, 0x41, 0xf2, 0xa7, 0xca, 0x28, 0x25, 0x86, 0xaa, 0x1a, 0x8d, 0x32, 0xba, 0x07, 0xd7,
	0xfd, 0x24, 0x32, 0x2a, 0x42, 0xb8, 0xae, 0x0c, 0xfa, 0x06, 0xa0, 0x4d, 0xf8, 0xe0, 0x17, 0x8d,
	0x51, 0x4d, 0x19, 0x2a, 0xcd, 0x31, 0x6a, 0xa8, 0x09, 0xd7, 0xfe, 0x16, 0x31, 0xea, 0x22, 0x7e,
	0xea, 0xe7, 0x86, 0xd1, 0x10, 0x8f, 0xba, 0x3c, 0x22, 0xc6, 0xfa, 0xe3, 0x7d, 0xc8, 0x8b, 0x82,
	0x13, 0xdb, 0xde, 0xeb, 0x9d, 0x5a, 0xef, 0x06, 0x1d, 0x6c, 0xac, 0x89, 0x04, 0xec, 0xf5, 0x74,
	0x86, 0xf7, 0x0e, 0x8e, 0x0f, 0x7b, 0x2a, 0xc3, 0xfb, 0xef, 0xf0, 0xde, 0xb0, 0x8f, 0x8d, 0x9c,
	0x30, 0xc7, 0x9d, 0xbd, 0x83, 0x7e, 0x4f, 0xe4, 0xb8, 0x7d, 0x0e, 0x0f, 0x03, 0xd6, 0x0a, 0x46,
	0xad, 0x20, 0xb0, 0x6f, 0x3a, 0x0b, 0xed, 0xf5, 0xc5, 0x28, 0xa6, 0x7f, 0xb8, 0x9e, 0x64, 0x7e,
	0x78, 0x36, 0xa1, 0xf1, 0xd9, 0x74, 0xd4, 0x72, 0x98, 0xbf, 0x1b, 0x78, 0xc1, 0xa5, 0xbd, 0x9b,
	0x38, 0x3f, 0xb1, 0x43, 0xfa, 0x64, 0xc2, 0x76, 0x93, 0x3f, 0xb5, 0xaf, 0xd5, 0xd5, 0xa8, 0x28,
	0x67, 0xf1, 0xe7, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x9c, 0xdf, 0xbb, 0xc4, 0x15, 0x00,
	0x00,
}
